{
    "nodes": [
        {
            "pos_x": -167.0,
            "pos_y": 212.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 0,
            "type_id": 1,
            "softbody_node_id": 6
        },
        {
            "pos_x": 85.0,
            "pos_y": 136.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 310.0,
            "user_size_y": 390.0,
            "id": 1,
            "type_id": 4,
            "source_code": "float smX = Read(0,0);\nfloat smY = Read(1,0);\nfloat smFACTOR=0.001;\n\nvoid step() {\n    float inX = Read(0,0);\n    float inY = Read(1,0);\n    Write(0,inX); // passthru X\n    Write(1,inY); // passthru Y\n\n\n   Write(7, inX);\n   Write(8, inY);\n\n//   Write(2, SmoothAvg(0,100)+0.001);\n//   Write(3, SmoothAvg(1,100)+0.001);\n\n//   Write(2, Smooth100(0,0)+0.001);\n//   Write(3, Smooth100(1,0)+0.001);\n\n//   float blueX=Sum100(0,0)/100.f;\n//   float blueY=Sum100(1,0)/100.f;\n\n   float blueX=LoopSum(0,0,100)/100.f;\n   float blueY=LoopSum(1,0,100)/100.f;\n\n   Write(2, blueX + 0.001);\n   Write(3, blueY + 0.001);\n\n\n // smX = SmoothEWMA(\n //       Read(0,0),smX,smFACTOR);\n // smY = SmoothEWMA(\n //       Read(1,0),smY,smFACTOR);\n\n//  Write(7,smX);\n//  Write(8,smY);\n\n\n\n}"
        },
        {
            "pos_x": 581.0,
            "pos_y": 112.0,
            "arranged_pos_x": 43.0,
            "arranged_pos_y": 590.0,
            "user_size_x": 436.0,
            "user_size_y": 350.0,
            "id": 3,
            "type_id": 8,
            "zoom": 6000.0,
            "grid_size": 0.009999999776482582
        },
        {
            "pos_x": -756.0,
            "pos_y": 1388.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 100.0,
            "user_size_y": 50.0,
            "id": 4,
            "type_id": 2,
            "amplitude": 10.0,
            "frequency": 0.10000000149011612,
            "noise_max": 30
        },
        {
            "pos_x": -518.0,
            "pos_y": 1404.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 312.0,
            "user_size_y": 238.0,
            "id": 5,
            "type_id": 4,
            "source_code": "float ewma=0.f;\n\nvoid step() {\n    // Pass-thru\n    Write(0,Read(0,0));\n\n   float avg = SmoothAvg(0,50);\n   Write(1,avg);\n\n   //ewma = SmoothEWMA(\n  //          Read(0,0),ewma,0.009);\n  // Write(2,ewma);\n   Write(2,SmoothAvg(0,100));\n   Write(8,0.f);\n}"
        },
        {
            "pos_x": 120.0,
            "pos_y": 1018.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 186.0,
            "user_size_y": 565.0,
            "id": 6,
            "type_id": 5,
            "scale": 11.5
        },
        {
            "pos_x": 342.0,
            "pos_y": 1014.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 196.0,
            "user_size_y": 569.0,
            "id": 7,
            "type_id": 5,
            "scale": 11.5
        },
        {
            "pos_x": 564.0,
            "pos_y": 1014.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 194.0,
            "user_size_y": 569.0,
            "id": 8,
            "type_id": 5,
            "scale": 11.5
        },
        {
            "pos_x": -136.0,
            "pos_y": 1492.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 200.0,
            "user_size_y": 200.0,
            "id": 9,
            "type_id": 8,
            "zoom": 22.5,
            "grid_size": 3.0
        },
        {
            "pos_x": 482.0,
            "pos_y": 16.0,
            "arranged_pos_x": 266.0,
            "arranged_pos_y": 468.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 10,
            "type_id": 9
        },
        {
            "pos_x": 482.0,
            "pos_y": 60.0,
            "arranged_pos_x": 106.0,
            "arranged_pos_y": 468.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 11,
            "type_id": 9
        },
        {
            "pos_x": -246.0,
            "pos_y": -150.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 12,
            "type_id": 4,
            "source_code": "// --- synthetic input test ---\n\n\nvoid step() {\n\n    Write(0,Read(0,0)-490.330);\n\n    Write(1,Read(1,0)+495.822);\n}"
        },
        {
            "pos_x": -542.0,
            "pos_y": -198.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 100.0,
            "user_size_y": 50.0,
            "id": 13,
            "type_id": 2,
            "amplitude": 0.01899999938905239,
            "frequency": 0.20000000298023225,
            "noise_max": 0
        },
        {
            "pos_x": -538.0,
            "pos_y": 36.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 100.0,
            "user_size_y": 50.0,
            "id": 14,
            "type_id": 2,
            "amplitude": 0.054999999701976779,
            "frequency": 0.30000001192092898,
            "noise_max": 0
        },
        {
            "pos_x": -274.0,
            "pos_y": -234.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 15,
            "type_id": 9
        }
    ],
    "links": [
        {
            "node_src_id": 1,
            "node_dst_id": 3,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 1,
            "node_dst_id": 3,
            "slot_src": 7,
            "slot_dst": 4
        },
        {
            "node_src_id": 1,
            "node_dst_id": 3,
            "slot_src": 8,
            "slot_dst": 5
        },
        {
            "node_src_id": 1,
            "node_dst_id": 3,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 1,
            "node_dst_id": 3,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 1,
            "node_dst_id": 3,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 4,
            "node_dst_id": 5,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 5,
            "node_dst_id": 6,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 5,
            "node_dst_id": 7,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 5,
            "node_dst_id": 8,
            "slot_src": 2,
            "slot_dst": 0
        },
        {
            "node_src_id": 5,
            "node_dst_id": 9,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 5,
            "node_dst_id": 9,
            "slot_src": 2,
            "slot_dst": 4
        },
        {
            "node_src_id": 5,
            "node_dst_id": 9,
            "slot_src": 2,
            "slot_dst": 3
        },
        {
            "node_src_id": 5,
            "node_dst_id": 9,
            "slot_src": 1,
            "slot_dst": 2
        },
        {
            "node_src_id": 1,
            "node_dst_id": 10,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 1,
            "node_dst_id": 11,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 12,
            "node_dst_id": 1,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 12,
            "node_dst_id": 1,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 13,
            "node_dst_id": 12,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 14,
            "node_dst_id": 12,
            "slot_src": 0,
            "slot_dst": 1
        },
        {
            "node_src_id": 13,
            "node_dst_id": 15,
            "slot_src": 0,
            "slot_dst": 0
        }
    ],
    "udp_pos_node": {
        "pos_x": -790.0,
        "pos_y": 644.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483646,
        "type_id": 7
    },
    "udp_acc_node": {
        "pos_x": -822.0,
        "pos_y": 518.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483644,
        "type_id": 7
    },
    "udp_orient_node": {
        "pos_x": -822.0,
        "pos_y": 710.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483643,
        "type_id": 7
    },
    "udp_velo_node": {
        "pos_x": -812.0,
        "pos_y": 584.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483645,
        "type_id": 7
    },
    "shared_script": "\nfloat SmoothAvg(int slot, int count)\n{\n    float fCount = float(count);\n    float buffer=0.f;\n    for (int i=0; i< count; ++i) {\n        buffer += Read(slot, -i);  \n    }\n    return buffer/fCount;\n}\n\nfloat LoopSum(int slot, int offs, int count)\n{\n\tdouble buffer = 0.0; // float is not enough!\n    for (int i = 0; i<count; ++i)\n   {\n      buffer = buffer + Read(slot, offs-i);\n   }\t\n    return buffer;\n}\n\n\nfloat SmoothEWMA(float cur, float prev, float factor)\n{\n    return (factor*cur) + ((1.0-factor)*prev);\n}\n\nfloat Smooth10(int slot, int offs)\n{\n    float buf = Read(slot,offs)     + Read(slot,offs-1)\n                + Read(slot,offs-2) + Read(slot,offs-3)\n                + Read(slot,offs-4) + Read(slot,offs-5)\n                + Read(slot,offs-6) + Read(slot,offs-7)\n                + Read(slot,offs-8) + Read(slot,offs-9);\n    return buf/10.f;\n}\n\nfloat Smooth100(int slot, int offs)\n{\n    float buf   = Smooth10(slot,offs)    + Smooth10(slot,offs-10)\n                + Smooth10(slot,offs-20) + Smooth10(slot,offs-30)\n                + Smooth10(slot,offs-40) + Smooth10(slot,offs-50)\n                + Smooth10(slot,offs-60) + Smooth10(slot,offs-70)\n                + Smooth10(slot,offs-80) + Smooth10(slot,offs-90);\n    return buf/10.f;\n}\n\nfloat Sum10(int slot, int offs)\n{\n    return        Read(slot,offs)   + Read(slot,offs-1)\n                + Read(slot,offs-2) + Read(slot,offs-3)\n                + Read(slot,offs-4) + Read(slot,offs-5)\n                + Read(slot,offs-6) + Read(slot,offs-7)\n                + Read(slot,offs-8) + Read(slot,offs-9);\n}\n\nfloat Sum100(int slot, int offs)\n{\n    return        Sum10(slot,offs)    + Sum10(slot,offs-10)\n                + Sum10(slot,offs-20) + Sum10(slot,offs-30)\n                + Sum10(slot,offs-40) + Sum10(slot,offs-50)\n                + Sum10(slot,offs-60) + Sum10(slot,offs-70)\n                + Sum10(slot,offs-80) + Sum10(slot,offs-90);\n}\n\n"
}