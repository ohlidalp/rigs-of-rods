{
    "nodes": [
        {
            "pos_x": 14.0,
            "pos_y": 45.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 0,
            "type_id": 1,
            "softbody_node_id": 26
        },
        {
            "pos_x": 18.0,
            "pos_y": 175.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 1,
            "type_id": 1,
            "softbody_node_id": 27
        },
        {
            "pos_x": 16.0,
            "pos_y": 305.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 2,
            "type_id": 1,
            "softbody_node_id": 24
        },
        {
            "pos_x": 18.0,
            "pos_y": 435.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 3,
            "type_id": 1,
            "softbody_node_id": 25
        },
        {
            "pos_x": 272.0,
            "pos_y": 47.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 206.0,
            "id": 4,
            "type_id": 4,
            "source_code": "// Lateral: roof, rear (right: 26)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothR);\n  SmoothReadingVec3(3, smoothL);\n}"
        },
        {
            "pos_x": 272.0,
            "pos_y": 295.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 5,
            "type_id": 4,
            "source_code": "// Lateral: roof, front (right: 24)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothR);\n  SmoothReadingVec3(3, smoothL);\n}"
        },
        {
            "pos_x": 16.0,
            "pos_y": 687.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 6,
            "type_id": 1,
            "softbody_node_id": 22
        },
        {
            "pos_x": 16.0,
            "pos_y": 808.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 7,
            "type_id": 1,
            "softbody_node_id": 23
        },
        {
            "pos_x": 272.0,
            "pos_y": 684.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 208.0,
            "id": 8,
            "type_id": 4,
            "source_code": "// Lateral: mid-cage, front\n// (right: 22)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothR);\n  SmoothReadingVec3(3, smoothL);\n}"
        },
        {
            "pos_x": 16.0,
            "pos_y": 932.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 9,
            "type_id": 1,
            "softbody_node_id": 28
        },
        {
            "pos_x": 16.0,
            "pos_y": 1050.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 10,
            "type_id": 1,
            "softbody_node_id": 29
        },
        {
            "pos_x": 268.0,
            "pos_y": 936.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 11,
            "type_id": 4,
            "source_code": "// Lateral: mid-cage, rear\n// (right: 28)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothR);\n  SmoothReadingVec3(3, smoothL);\n}"
        },
        {
            "pos_x": 20.0,
            "pos_y": 1295.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 12,
            "type_id": 1,
            "softbody_node_id": 20
        },
        {
            "pos_x": 22.0,
            "pos_y": 1413.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 13,
            "type_id": 1,
            "softbody_node_id": 21
        },
        {
            "pos_x": 264.0,
            "pos_y": 1295.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 270.0,
            "user_size_y": 200.0,
            "id": 14,
            "type_id": 4,
            "source_code": "// Lateral: floor, front (right: 20)\n\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothR);\n  SmoothReadingVec3(3, smoothL);\n}"
        },
        {
            "pos_x": 21.0,
            "pos_y": 1535.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 15,
            "type_id": 1,
            "softbody_node_id": 30
        },
        {
            "pos_x": 19.0,
            "pos_y": 1659.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 16,
            "type_id": 1,
            "softbody_node_id": 31
        },
        {
            "pos_x": 265.0,
            "pos_y": 1543.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 256.0,
            "user_size_y": 182.0,
            "id": 17,
            "type_id": 4,
            "source_code": "// Lateral: floor, rear (right: 30)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothR);\n  SmoothReadingVec3(3, smoothL);\n}"
        },
        {
            "pos_x": 644.0,
            "pos_y": 145.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 282.0,
            "user_size_y": 156.0,
            "id": 27,
            "type_id": 4,
            "source_code": "// Outputs\n// 6,7,8 - midpoint(roof, rear)\n\nvoid step()\n{\n   WriteMidXYZ(6, 0, 3);\n}"
        },
        {
            "pos_x": 647.0,
            "pos_y": 370.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 290.0,
            "user_size_y": 150.0,
            "id": 30,
            "type_id": 4,
            "source_code": "// Outputs\n// 6,7,8 - midpoint(roof, front)\n\nvoid step()\n{\n   WriteMidXYZ(6, 0, 3);\n}"
        },
        {
            "pos_x": 689.0,
            "pos_y": 698.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 284.0,
            "user_size_y": 180.0,
            "id": 31,
            "type_id": 4,
            "source_code": "// Outputs\n// 6,7,8 - midpoint(mid-cage, front)\n\nvoid step()\n{\n   WriteMidXYZ(6, 0, 3);\n}"
        },
        {
            "pos_x": 691.0,
            "pos_y": 942.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 286.0,
            "user_size_y": 176.0,
            "id": 32,
            "type_id": 4,
            "source_code": "// Outputs\n// 6,7,8 - midpoint(mid-cage, rear)\n\nvoid step()\n{\n   WriteMidXYZ(6, 3, 6);\n}"
        },
        {
            "pos_x": 681.0,
            "pos_y": 1302.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 282.0,
            "user_size_y": 188.0,
            "id": 34,
            "type_id": 4,
            "source_code": "// Outputs:\n// 6,7,8 - midpoint(floor, front)\n\n\nvoid step()\n{\n    WriteMidXYZ(6, 0, 3);\n}"
        },
        {
            "pos_x": 685.0,
            "pos_y": 1542.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 278.0,
            "user_size_y": 180.0,
            "id": 35,
            "type_id": 4,
            "source_code": "// Outputs:\n// 6,7,8 - midpoint(floor, rear)\n\nvoid step()\n{\n    WriteMidXYZ(6, 3, 6);\n}"
        },
        {
            "pos_x": 2246.0,
            "pos_y": 964.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 384.0,
            "user_size_y": 218.0,
            "id": 46,
            "type_id": 4,
            "source_code": "\n// output 0,1,2: rollcage midpoint XYZ position (m)\n\nvoid step() {\n  //        --roof--   --cage--  --floor--\n  float X = (Read(0,0)+Read(3,0)+Read(6,0))/3.0;\n  float Y = (Read(1,0)+Read(4,0)+Read(7,0))/3.0;\n  float Z = (Read(2,0)+Read(5,0)+Read(8,0))/3.0;\n\n  Write(0, X);         \n  Write(1, Y);         \n  Write(2, Z);         \n\n}"
        },
        {
            "pos_x": 2786.0,
            "pos_y": 974.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 47,
            "type_id": 9
        },
        {
            "pos_x": 2784.0,
            "pos_y": 1012.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 48,
            "type_id": 9
        },
        {
            "pos_x": 2786.0,
            "pos_y": 1052.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 49,
            "type_id": 9
        },
        {
            "pos_x": 2716.0,
            "pos_y": 1116.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 400.0,
            "user_size_y": 326.0,
            "id": 85,
            "type_id": 4,
            "source_code": "\n//output0: xyz velocity [(m/s)]\n\n // NOTE sim runs at 2kHz (=500 microsec.)\n //      offset \"-2\" = 1milisec sample (2*500 microsec)\n\nvoid step()\n{\n  // --------- velo in m/s ------------\n  //       offset -20= 10 milis. \n  float veloX=(Read(0,0)-Read(0,-20))*100;\n  float veloY=(Read(1,0)-Read(1,-20))*100;\n  float veloZ=(Read(2,0)-Read(2,-20))*100;\n\n    Write(0,veloX); //X\n    Write(1,veloY); //Y\n    Write(2,veloZ); //Z\n\n  // ------ TEST: velo in m/s without transform------\n   Write(6, Read(0,0)-Read(0,-1999)); // x\n   Write(7, Read(1,0)-Read(1,-1999)); // y\n   Write(8, Read(2,0)-Read(2,-1999)); // z\n}"
        },
        {
            "pos_x": 3292.0,
            "pos_y": 1276.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 342.0,
            "user_size_y": 256.0,
            "id": 89,
            "type_id": 4,
            "source_code": "// Output 0: xyz accel [(m/s^2)]\n// NOTE: input is already m/s\n\nint dLen = 10; // num ticks (1tick=500microsec)\n\nvoid step() {\n\n   float dVx =(Read(0,0)-Read(0,-dLen));\n   float dVy =(Read(1,0)-Read(1,-dLen));\n   float dVz =(Read(2,0)-Read(2,-dLen));\n\n   float dT = float(dLen*500)/1000000.0;\n\n    Write(0, dVx/dT);\n    Write(1, dVy/dT);\n    Write(2, dVz/dT);\n}"
        },
        {
            "pos_x": 3911.0,
            "pos_y": 1227.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 154.0,
            "user_size_y": 307.0,
            "id": 90,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3557.0,
            "pos_y": 695.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 152.0,
            "user_size_y": 307.0,
            "id": 91,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3916.0,
            "pos_y": 880.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 152.0,
            "user_size_y": 307.0,
            "id": 100,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3738.0,
            "pos_y": 696.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 150.0,
            "user_size_y": 305.0,
            "id": 101,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3797.0,
            "pos_y": 1131.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 104,
            "type_id": 9
        },
        {
            "pos_x": 3767.0,
            "pos_y": 1341.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 105,
            "type_id": 9
        }
    ],
    "links": [
        {
            "node_src_id": 0,
            "node_dst_id": 4,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 0,
            "node_dst_id": 4,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 1,
            "node_dst_id": 4,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 0,
            "node_dst_id": 4,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 1,
            "node_dst_id": 4,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 1,
            "node_dst_id": 4,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 2,
            "node_dst_id": 5,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 2,
            "node_dst_id": 5,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 2,
            "node_dst_id": 5,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 3,
            "node_dst_id": 5,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 3,
            "node_dst_id": 5,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 6,
            "node_dst_id": 8,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 6,
            "node_dst_id": 8,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 6,
            "node_dst_id": 8,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 7,
            "node_dst_id": 8,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 7,
            "node_dst_id": 8,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 9,
            "node_dst_id": 11,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 9,
            "node_dst_id": 11,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 9,
            "node_dst_id": 11,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 10,
            "node_dst_id": 11,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 10,
            "node_dst_id": 11,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 10,
            "node_dst_id": 11,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 12,
            "node_dst_id": 14,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 12,
            "node_dst_id": 14,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 13,
            "node_dst_id": 14,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 13,
            "node_dst_id": 14,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 13,
            "node_dst_id": 14,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 15,
            "node_dst_id": 17,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 15,
            "node_dst_id": 17,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 15,
            "node_dst_id": 17,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 16,
            "node_dst_id": 17,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 16,
            "node_dst_id": 17,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 16,
            "node_dst_id": 17,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 4,
            "node_dst_id": 27,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 4,
            "node_dst_id": 27,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 4,
            "node_dst_id": 27,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 4,
            "node_dst_id": 27,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 4,
            "node_dst_id": 27,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 4,
            "node_dst_id": 27,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 5,
            "node_dst_id": 30,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 5,
            "node_dst_id": 30,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 5,
            "node_dst_id": 30,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 5,
            "node_dst_id": 30,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 5,
            "node_dst_id": 30,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 5,
            "node_dst_id": 30,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 8,
            "node_dst_id": 31,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 8,
            "node_dst_id": 31,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 8,
            "node_dst_id": 31,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 8,
            "node_dst_id": 31,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 8,
            "node_dst_id": 31,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 11,
            "node_dst_id": 32,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 11,
            "node_dst_id": 32,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 11,
            "node_dst_id": 32,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 11,
            "node_dst_id": 32,
            "slot_src": 3,
            "slot_dst": 6
        },
        {
            "node_src_id": 11,
            "node_dst_id": 32,
            "slot_src": 4,
            "slot_dst": 7
        },
        {
            "node_src_id": 8,
            "node_dst_id": 32,
            "slot_src": 3,
            "slot_dst": 0
        },
        {
            "node_src_id": 8,
            "node_dst_id": 32,
            "slot_src": 4,
            "slot_dst": 1
        },
        {
            "node_src_id": 8,
            "node_dst_id": 32,
            "slot_src": 5,
            "slot_dst": 2
        },
        {
            "node_src_id": 14,
            "node_dst_id": 34,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 14,
            "node_dst_id": 34,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 14,
            "node_dst_id": 34,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 14,
            "node_dst_id": 34,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 14,
            "node_dst_id": 34,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 14,
            "node_dst_id": 34,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 11,
            "node_dst_id": 31,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 11,
            "node_dst_id": 31,
            "slot_src": 1,
            "slot_dst": 7
        },
        {
            "node_src_id": 11,
            "node_dst_id": 31,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 17,
            "node_dst_id": 34,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 17,
            "node_dst_id": 34,
            "slot_src": 1,
            "slot_dst": 7
        },
        {
            "node_src_id": 17,
            "node_dst_id": 34,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 14,
            "node_dst_id": 35,
            "slot_src": 3,
            "slot_dst": 0
        },
        {
            "node_src_id": 14,
            "node_dst_id": 35,
            "slot_src": 4,
            "slot_dst": 1
        },
        {
            "node_src_id": 14,
            "node_dst_id": 35,
            "slot_src": 5,
            "slot_dst": 2
        },
        {
            "node_src_id": 17,
            "node_dst_id": 35,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 17,
            "node_dst_id": 35,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 17,
            "node_dst_id": 35,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 17,
            "node_dst_id": 35,
            "slot_src": 3,
            "slot_dst": 6
        },
        {
            "node_src_id": 17,
            "node_dst_id": 35,
            "slot_src": 4,
            "slot_dst": 7
        },
        {
            "node_src_id": 17,
            "node_dst_id": 35,
            "slot_src": 5,
            "slot_dst": 8
        },
        {
            "node_src_id": 11,
            "node_dst_id": 32,
            "slot_src": 5,
            "slot_dst": 8
        },
        {
            "node_src_id": 8,
            "node_dst_id": 31,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 46,
            "node_dst_id": -2147483646,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": -2147483646,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 46,
            "node_dst_id": -2147483646,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 46,
            "node_dst_id": 47,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 48,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 49,
            "slot_src": 2,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 85,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 85,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 46,
            "node_dst_id": 85,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 85,
            "node_dst_id": -2147483645,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": -2147483645,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 85,
            "node_dst_id": -2147483645,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 85,
            "node_dst_id": 89,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 89,
            "node_dst_id": -2147483644,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": -2147483644,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 89,
            "node_dst_id": -2147483644,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 85,
            "node_dst_id": 89,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": 100,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": 90,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": 89,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 89,
            "node_dst_id": 104,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": 105,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": 91,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": 101,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 3,
            "node_dst_id": 5,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 7,
            "node_dst_id": 8,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 12,
            "node_dst_id": 14,
            "slot_src": 0,
            "slot_dst": 0
        }
    ],
    "udp_pos_node": {
        "pos_x": 2820.0,
        "pos_y": 868.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483646,
        "type_id": 7
    },
    "udp_acc_node": {
        "pos_x": 3758.0,
        "pos_y": 1260.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483644,
        "type_id": 7
    },
    "udp_orient_node": {
        "pos_x": 1303.0,
        "pos_y": 1186.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483643,
        "type_id": 7
    },
    "udp_velo_node": {
        "pos_x": 3254.0,
        "pos_y": 1148.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483645,
        "type_id": 7
    },
    "shared_script": "// Config\ndouble ReadingSmoothFactor = 0.2; // 0.2 = 100ms\n\n// --------------------------------------------------\n\nclass Vec3\n{\n    Vec3() {}\n\n    Vec3(double xx, double yy, double zz) { x=xx; y=yy; z=zz; }\n\n    double Len() { return sqrt(x*x + y*y + z*z); }\n\n\tVec3 Normalize()\n    {\n       double len = Len();\n       return Vec3(x/len, y/len, z/len);\n    }\n\n    Vec3 CrossProduct(Vec3 b)\n    {\n\t\treturn Vec3(y*b.z - z*b.y,\n        \t        z*b.x - x*b.z,\n            \t    x*b.y - y*b.x);\n    }\n\n    // overloaded operators\n    void opAssign(Vec3 rhs) { x=rhs.x; y=rhs.y; z=rhs.z; }\n\n    Vec3 opSub(Vec3 rhs) { return Vec3(x-rhs.x, y-rhs.y, z-rhs.z); }\n\n    Vec3 opNeg() { return Vec3(-x, -y, -z); }\n\n    Vec3 opMul(double s) { return Vec3(x*s, y*s, z*s); }\n\n    // Var\n    double x, y, z;\n}\n\nVec3 ReadVec3(int slot, int offs)\n{\n\treturn Vec3(Read(slot,  offs),\n                Read(slot+1,offs),\n                Read(slot+2,offs));\n}\n\n// Exponentially Weighted Moving Average (= 1st order IIR)\ndouble SmoothEWMA(double cur, double prev, double factor)\n{\n    return (factor*cur) + ((1.0-factor)*prev);\n}\n\nvoid SmoothVec3(int slot, Vec3& avg, double factor)\n{\n    Vec3 cur = ReadVec3(slot, 0);\n    avg.x = SmoothEWMA(cur.x, avg.x, factor);\n    avg.y = SmoothEWMA(cur.x, avg.y, factor);\n    avg.z = SmoothEWMA(cur.x, avg.z, factor);\n}\n\nvoid SmoothReadingVec3(int slot, Vec3& avg)\n{\n\tSmoothVec3(slot, avg, ReadingSmoothFactor);\n}\n\n/// calculates middle XYZ point between src1/src2 and writes it to dstSlot.\nvoid WriteMidXYZ(int dstSlot, int src1, int src2)\n{\n    Write(dstSlot,   (Read(src1,  0) + Read(src2,  0))/2.0); // X\n    Write(dstSlot+1, (Read(src1+1,0) + Read(src2+1,0))/2.0); // Y\n    Write(dstSlot+2, (Read(src1+2,0) + Read(src2+2,0))/2.0); // Z\n}\n\nfloat Pi = 3.1415927;\nfloat HalfPi = Pi/2.f;\n\nclass Matrix3\n{\n    Matrix3() {}\n\n\t// Var\n    Vec3 colX;   // column 1\n    Vec3 colY;   // column 2\n    Vec3 colZ;   // column 3\n}\n\nvoid WriteVec3(int slot, Vec3 v)\n{\n    Write(slot,  v.x);\n    Write(slot+1,v.y);\n    Write(slot+2,v.z);\n}\n\n"
}