{
    "nodes": [
        {
            "pos_x": 14.0,
            "pos_y": 45.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 0,
            "type_id": 1,
            "softbody_node_id": 26
        },
        {
            "pos_x": 18.0,
            "pos_y": 175.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 1,
            "type_id": 1,
            "softbody_node_id": 27
        },
        {
            "pos_x": 16.0,
            "pos_y": 305.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 2,
            "type_id": 1,
            "softbody_node_id": 24
        },
        {
            "pos_x": 18.0,
            "pos_y": 435.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 3,
            "type_id": 1,
            "softbody_node_id": 25
        },
        {
            "pos_x": 274.0,
            "pos_y": 91.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 246.0,
            "user_size_y": 180.0,
            "id": 4,
            "type_id": 4,
            "source_code": "// Lateral: roof, rear (right: 26)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothL);\n  SmoothReadingVec3(3, smoothR);\n}"
        },
        {
            "pos_x": 270.0,
            "pos_y": 323.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 5,
            "type_id": 4,
            "source_code": "// Lateral: roof, front (right: 24)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothL);\n  SmoothReadingVec3(3, smoothR);\n}"
        },
        {
            "pos_x": 16.0,
            "pos_y": 687.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 6,
            "type_id": 1,
            "softbody_node_id": 22
        },
        {
            "pos_x": 16.0,
            "pos_y": 808.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 7,
            "type_id": 1,
            "softbody_node_id": 23
        },
        {
            "pos_x": 272.0,
            "pos_y": 684.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 208.0,
            "id": 8,
            "type_id": 4,
            "source_code": "// Lateral: mid-cage, front\n// (right: 22)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothL);\n  SmoothReadingVec3(3, smoothR);\n}"
        },
        {
            "pos_x": 16.0,
            "pos_y": 932.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 9,
            "type_id": 1,
            "softbody_node_id": 28
        },
        {
            "pos_x": 16.0,
            "pos_y": 1050.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 10,
            "type_id": 1,
            "softbody_node_id": 29
        },
        {
            "pos_x": 272.0,
            "pos_y": 934.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 11,
            "type_id": 4,
            "source_code": "// Lateral: mid-cage, rear\n// (right: 28)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothL);\n  SmoothReadingVec3(3, smoothR);\n}"
        },
        {
            "pos_x": -66.0,
            "pos_y": 1289.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 12,
            "type_id": 1,
            "softbody_node_id": 20
        },
        {
            "pos_x": 110.0,
            "pos_y": 1347.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 13,
            "type_id": 1,
            "softbody_node_id": 21
        },
        {
            "pos_x": 328.0,
            "pos_y": 1285.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 276.0,
            "user_size_y": 166.0,
            "id": 14,
            "type_id": 4,
            "source_code": "// Lateral: floor, front (right: 20)\n\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothL);\n  SmoothReadingVec3(3, smoothR);\n}"
        },
        {
            "pos_x": -63.0,
            "pos_y": 1475.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 15,
            "type_id": 1,
            "softbody_node_id": 30
        },
        {
            "pos_x": 113.0,
            "pos_y": 1531.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 16,
            "type_id": 1,
            "softbody_node_id": 31
        },
        {
            "pos_x": 325.0,
            "pos_y": 1487.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 268.0,
            "user_size_y": 156.0,
            "id": 17,
            "type_id": 4,
            "source_code": "// Lateral: floor, rear (right: 30)\n\nVec3 smoothR = ReadVec3(0,0);\nVec3 smoothL = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothL);\n  SmoothReadingVec3(3, smoothR);\n}"
        },
        {
            "pos_x": 2246.0,
            "pos_y": 964.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 384.0,
            "user_size_y": 218.0,
            "id": 46,
            "type_id": 4,
            "source_code": "\n// output 0,1,2: rollcage midpoint XYZ position (m)\n\nvoid step() {\n  //        --roof--   --cage--  --floor--\n  float X = (Read(0,0)+Read(3,0)+Read(6,0))/3.0;\n  float Y = (Read(1,0)+Read(4,0)+Read(7,0))/3.0;\n  float Z = (Read(2,0)+Read(5,0)+Read(8,0))/3.0;\n\n  Write(0, X);         \n  Write(1, Y);         \n  Write(2, Z);         \n\n}"
        },
        {
            "pos_x": 2786.0,
            "pos_y": 974.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 47,
            "type_id": 9
        },
        {
            "pos_x": 2784.0,
            "pos_y": 1012.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 48,
            "type_id": 9
        },
        {
            "pos_x": 2786.0,
            "pos_y": 1052.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 49,
            "type_id": 9
        },
        {
            "pos_x": 2716.0,
            "pos_y": 1116.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 400.0,
            "user_size_y": 326.0,
            "id": 85,
            "type_id": 4,
            "source_code": "\n//output0: xyz velocity [(m/s)]\n\n // NOTE sim runs at 2kHz (=500 microsec.)\n //      offset \"-2\" = 1milisec sample (2*500 microsec)\n\nvoid step()\n{\n  // --------- velo in m/s ------------\n  //       offset -20= 10 milis. \n  float veloX=(Read(0,0)-Read(0,-20))*100;\n  float veloY=(Read(1,0)-Read(1,-20))*100;\n  float veloZ=(Read(2,0)-Read(2,-20))*100;\n\n    Write(0,veloX); //X\n    Write(1,veloY); //Y\n    Write(2,veloZ); //Z\n\n  // ------ TEST: velo in m/s without transform------\n   Write(6, Read(0,0)-Read(0,-1999)); // x\n   Write(7, Read(1,0)-Read(1,-1999)); // y\n   Write(8, Read(2,0)-Read(2,-1999)); // z\n}"
        },
        {
            "pos_x": 3292.0,
            "pos_y": 1276.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 342.0,
            "user_size_y": 256.0,
            "id": 89,
            "type_id": 4,
            "source_code": "// Output 0: xyz accel [(m/s^2)]\n// NOTE: input is already m/s\n\nint dLen = 10; // num ticks (1tick=500microsec)\n\nvoid step() {\n\n   float dVx =(Read(0,0)-Read(0,-dLen));\n   float dVy =(Read(1,0)-Read(1,-dLen));\n   float dVz =(Read(2,0)-Read(2,-dLen));\n\n   float dT = float(dLen*500)/1000000.0;\n\n    Write(0, dVx/dT);\n    Write(1, dVy/dT);\n    Write(2, dVz/dT);\n}"
        },
        {
            "pos_x": 3911.0,
            "pos_y": 1227.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 154.0,
            "user_size_y": 307.0,
            "id": 90,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3557.0,
            "pos_y": 695.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 152.0,
            "user_size_y": 307.0,
            "id": 91,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3916.0,
            "pos_y": 880.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 152.0,
            "user_size_y": 307.0,
            "id": 100,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3738.0,
            "pos_y": 696.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 150.0,
            "user_size_y": 305.0,
            "id": 101,
            "type_id": 5,
            "scale": 5.0
        },
        {
            "pos_x": 3797.0,
            "pos_y": 1131.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 104,
            "type_id": 9
        },
        {
            "pos_x": 3767.0,
            "pos_y": 1341.0,
            "arranged_pos_x": -1.0,
            "arranged_pos_y": -1.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 105,
            "type_id": 9
        },
        {
            "pos_x": 157.0,
            "pos_y": 1896.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 106,
            "type_id": 1,
            "softbody_node_id": 22
        },
        {
            "pos_x": 343.0,
            "pos_y": 1962.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 107,
            "type_id": 1,
            "softbody_node_id": 28
        },
        {
            "pos_x": 541.0,
            "pos_y": 1890.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 286.0,
            "user_size_y": 170.0,
            "id": 108,
            "type_id": 4,
            "source_code": "// Longi, mid-cage, right\n// (front: 22)\n\nVec3 smoothFront = ReadVec3(0,0);\nVec3 smoothRear  = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothFront);\n  SmoothReadingVec3(3, smoothRear);\n}"
        },
        {
            "pos_x": 155.0,
            "pos_y": 2114.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 109,
            "type_id": 1,
            "softbody_node_id": 23
        },
        {
            "pos_x": 543.0,
            "pos_y": 2100.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 284.0,
            "user_size_y": 170.0,
            "id": 111,
            "type_id": 4,
            "source_code": "// Longi, mid-cage, left\n// (front: 23)\n\nVec3 smoothFront = ReadVec3(0,0);\nVec3 smoothRear  = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothFront);\n  SmoothReadingVec3(3, smoothRear);\n}"
        },
        {
            "pos_x": 333.0,
            "pos_y": 2178.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 112,
            "type_id": 1,
            "softbody_node_id": 29
        },
        {
            "pos_x": 164.0,
            "pos_y": 2334.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 113,
            "type_id": 1,
            "softbody_node_id": 20
        },
        {
            "pos_x": 350.0,
            "pos_y": 2392.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 114,
            "type_id": 1,
            "softbody_node_id": 30
        },
        {
            "pos_x": 168.0,
            "pos_y": 2534.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 115,
            "type_id": 1,
            "softbody_node_id": 21
        },
        {
            "pos_x": 342.0,
            "pos_y": 2602.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 0.0,
            "user_size_y": 0.0,
            "id": 116,
            "type_id": 1,
            "softbody_node_id": 31
        },
        {
            "pos_x": 544.0,
            "pos_y": 2324.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 288.0,
            "user_size_y": 162.0,
            "id": 117,
            "type_id": 4,
            "source_code": "// Longi, floor, right\n// (front: 20)\n\nVec3 smoothFront = ReadVec3(0,0);\nVec3 smoothRear  = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothFront);\n  SmoothReadingVec3(3, smoothRear);\n}"
        },
        {
            "pos_x": 550.0,
            "pos_y": 2530.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 290.0,
            "user_size_y": 166.0,
            "id": 118,
            "type_id": 4,
            "source_code": "// Longi, floor, left\n// (front: 21)\n\nVec3 smoothFront = ReadVec3(0,0);\nVec3 smoothRear  = ReadVec3(3,0);\n\nvoid step()\n{\n  SmoothReadingVec3(0, smoothFront);\n  SmoothReadingVec3(3, smoothRear);\n}"
        },
        {
            "pos_x": 1175.0,
            "pos_y": 1668.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 348.0,
            "user_size_y": 866.0,
            "id": 124,
            "type_id": 11,
            "source_code": "\nvoid step()\n{\n  Vec3 fwdAxis; // Forward axis\n  fwdAxis   += ReadVec3(0, 0)-ReadVec3(3, 0);\n  fwdAxis   += ReadVec3(6, 0)-ReadVec3(9, 0);\n  fwdAxis   += ReadVec3(12,0)-ReadVec3(15,0);\n  fwdAxis   += ReadVec3(18,0)-ReadVec3(21,0);\n\n  WriteVec3(0, fwdAxis/4.0); \n\n  Vec3 midpoint;\n  midpoint    += ReadVec3(0, 0)+ReadVec3(3, 0);\n  midpoint    += ReadVec3(6, 0)+ReadVec3(9, 0);\n  midpoint    += ReadVec3(12,0)+ReadVec3(15,0);\n  midpoint    += ReadVec3(18,0)+ReadVec3(21,0);\n\n  WriteVec3(3, midpoint/8.0);\n}"
        },
        {
            "pos_x": 709.0,
            "pos_y": 1260.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 352.0,
            "user_size_y": 306.0,
            "id": 128,
            "type_id": 4,
            "source_code": "// Outputs: axis, midpoint\n\nvoid step()\n{\n  Vec3 longiAxis;\n  longiAxis   += ReadVec3(0, 0)-ReadVec3(3, 0);\n  longiAxis   += ReadVec3(6, 0)-ReadVec3(9, 0);\n\n  WriteVec3(0, longiAxis/2.0); \n\n  Vec3 midpoint;\n  midpoint    += ReadVec3(0, 0)+ReadVec3(3, 0);\n  midpoint    += ReadVec3(6, 0)+ReadVec3(9, 0);\n\n  WriteVec3(3, midpoint/4.0);\n}"
        },
        {
            "pos_x": 703.0,
            "pos_y": 702.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 346.0,
            "user_size_y": 354.0,
            "id": 129,
            "type_id": 4,
            "source_code": "// Outputs: axis, midpoint\n\nvoid step()\n{\n  Vec3 longiAxis;\n  longiAxis   += ReadVec3(0, 0)-ReadVec3(3, 0);\n  longiAxis   += ReadVec3(6, 0)-ReadVec3(9, 0);\n\n  WriteVec3(0, longiAxis/2.0); \n\n  Vec3 midpoint;\n  midpoint    += ReadVec3(0, 0)+ReadVec3(3, 0);\n  midpoint    += ReadVec3(6, 0)+ReadVec3(9, 0);\n\n  WriteVec3(3, midpoint/4.0);\n}"
        },
        {
            "pos_x": 697.0,
            "pos_y": 160.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 352.0,
            "user_size_y": 372.0,
            "id": 130,
            "type_id": 4,
            "source_code": "// Outputs: axis, midpoint\n\nvoid step()\n{\n  Vec3 longiAxis;\n  longiAxis   += ReadVec3(0, 0)-ReadVec3(3, 0);\n  longiAxis   += ReadVec3(6, 0)-ReadVec3(9, 0);\n\n  WriteVec3(0, longiAxis/2.0); \n\n  Vec3 midpoint;\n  midpoint    += ReadVec3(0, 0)+ReadVec3(3, 0);\n  midpoint    += ReadVec3(6, 0)+ReadVec3(9, 0);\n\n  WriteVec3(3, midpoint/4.0);\n}"
        },
        {
            "pos_x": 1217.0,
            "pos_y": 164.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 304.0,
            "user_size_y": 1426.0,
            "id": 132,
            "type_id": 11,
            "source_code": "\nvoid step()\n{\n    Vec3 leftAxis;\n    leftAxis += ReadVec3(0,0);\n    leftAxis += ReadVec3(12,0);\n    leftAxis += ReadVec3(18,0);\n\n    WriteVec3(21, leftAxis/3.0);\n\n    Vec3 midpoint;\n    midpoint += ReadVec3(3, 0); //roof\n    midpoint += ReadVec3(5, 0); //midcage\n    midpoint += ReadVec3(21,0); //floor \n    \n    WriteVec3(18, midpoint/3.0);\n}"
        },
        {
            "pos_x": 1702.0,
            "pos_y": 1364.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 334.0,
            "user_size_y": 498.0,
            "id": 180,
            "type_id": 4,
            "source_code": "\nvoid step()\n{\n\n\n  Vec3 midpoint;\n  midpoint += ReadVec3(0,0);\n  midpoint += ReadVec3(9,0);\n  WriteVec3(0, midpoint);\n\n  Vec3 leftAxis = ReadVec3(3,0);\n  Vec3 fwdAxis  = ReadVec3(6,0);\n\n  Vec3 upAxis \n   = fwdAxis.CrossProduct(leftAxis);\n\n  Matrix3 m;\n\n  m.colX = fwdAxis.Normalize();\n  m.colY = leftAxis.Normalize();\n  m.colZ = upAxis.Normalize();\n\n  Write(11, m.GetYaw());\n}\n"
        },
        {
            "pos_x": 2118.0,
            "pos_y": 1410.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 181,
            "type_id": 4,
            "source_code": "Vec3 centerAvg = ReadVec3(0,0);\n\nvoid step()\n{\n   SmoothCenterVec3(0, centerAvg);\n\n   // Position in meters\n   WriteVec3(0, centerAvg);\n}"
        },
        {
            "pos_x": 2524.0,
            "pos_y": 1516.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 418.0,
            "user_size_y": 252.0,
            "id": 182,
            "type_id": 4,
            "source_code": "//output0: xyz velocity [(m/s)]\n\n // NOTE sim runs at 2kHz (=500 microsec.)\n //      offset \"-2\" = 1milisec sample (2*500 microsec)\n\nint veloOffs = -2*VeloIntervalMs;\ndouble veloMul = 1000.0/double(VeloIntervalMs);\nVec3 avgVelo = ReadVec3(0,0);\n\nvoid step()\n{\n   Vec3 curPos  = ReadVec3(0,0);\n   Vec3 prevPos = ReadVec3(0,veloOffs);\n   SmoothVeloVec3((curPos-prevPos)*veloMul, avgVelo);\n   WriteVec3(0, avgVelo);\n}"
        },
        {
            "pos_x": 3128.0,
            "pos_y": 1640.0,
            "arranged_pos_x": -2.0,
            "arranged_pos_y": -2.0,
            "user_size_x": 250.0,
            "user_size_y": 200.0,
            "id": 183,
            "type_id": 4,
            "source_code": "// Output 0: xyz accel [(m/s^2)]\n// NOTE: input is already m/s\n\nvoid step()\n{\n   WriteVec3(0,\n      ReadVec3(0,0)\n      -ReadVec3(0,-1));\n}"
        },
        {
            "pos_x": 2122.0,
            "pos_y": 1770.0,
            "arranged_pos_x": 136.0,
            "arranged_pos_y": 780.0,
            "user_size_x": 100.0,
            "user_size_y": 30.0,
            "id": 254,
            "type_id": 9
        }
    ],
    "links": [
        {
            "node_src_id": 0,
            "node_dst_id": 4,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 0,
            "node_dst_id": 4,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 1,
            "node_dst_id": 4,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 0,
            "node_dst_id": 4,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 1,
            "node_dst_id": 4,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 1,
            "node_dst_id": 4,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 2,
            "node_dst_id": 5,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 2,
            "node_dst_id": 5,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 2,
            "node_dst_id": 5,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 3,
            "node_dst_id": 5,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 3,
            "node_dst_id": 5,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 6,
            "node_dst_id": 8,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 6,
            "node_dst_id": 8,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 6,
            "node_dst_id": 8,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 7,
            "node_dst_id": 8,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 7,
            "node_dst_id": 8,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 9,
            "node_dst_id": 11,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 9,
            "node_dst_id": 11,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 9,
            "node_dst_id": 11,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 10,
            "node_dst_id": 11,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 10,
            "node_dst_id": 11,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 10,
            "node_dst_id": 11,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 12,
            "node_dst_id": 14,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 12,
            "node_dst_id": 14,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 13,
            "node_dst_id": 14,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 13,
            "node_dst_id": 14,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 13,
            "node_dst_id": 14,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 15,
            "node_dst_id": 17,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 15,
            "node_dst_id": 17,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 15,
            "node_dst_id": 17,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 16,
            "node_dst_id": 17,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 16,
            "node_dst_id": 17,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 16,
            "node_dst_id": 17,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 46,
            "node_dst_id": 47,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 48,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 49,
            "slot_src": 2,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 85,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 46,
            "node_dst_id": 85,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 46,
            "node_dst_id": 85,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 85,
            "node_dst_id": 89,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": 100,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": 90,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": 89,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 89,
            "node_dst_id": 104,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 89,
            "node_dst_id": 105,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": 91,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 85,
            "node_dst_id": 101,
            "slot_src": 1,
            "slot_dst": 0
        },
        {
            "node_src_id": 3,
            "node_dst_id": 5,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 7,
            "node_dst_id": 8,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 12,
            "node_dst_id": 14,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 106,
            "node_dst_id": 108,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 106,
            "node_dst_id": 108,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 106,
            "node_dst_id": 108,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 107,
            "node_dst_id": 108,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 107,
            "node_dst_id": 108,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 107,
            "node_dst_id": 108,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 109,
            "node_dst_id": 111,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 109,
            "node_dst_id": 111,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 109,
            "node_dst_id": 111,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 112,
            "node_dst_id": 111,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 112,
            "node_dst_id": 111,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 112,
            "node_dst_id": 111,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 113,
            "node_dst_id": 117,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 113,
            "node_dst_id": 117,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 113,
            "node_dst_id": 117,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 114,
            "node_dst_id": 117,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 114,
            "node_dst_id": 117,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 114,
            "node_dst_id": 117,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 115,
            "node_dst_id": 118,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 115,
            "node_dst_id": 118,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 115,
            "node_dst_id": 118,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 116,
            "node_dst_id": 118,
            "slot_src": 0,
            "slot_dst": 3
        },
        {
            "node_src_id": 116,
            "node_dst_id": 118,
            "slot_src": 1,
            "slot_dst": 4
        },
        {
            "node_src_id": 116,
            "node_dst_id": 118,
            "slot_src": 2,
            "slot_dst": 5
        },
        {
            "node_src_id": 108,
            "node_dst_id": 124,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 108,
            "node_dst_id": 124,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 108,
            "node_dst_id": 124,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 108,
            "node_dst_id": 124,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 108,
            "node_dst_id": 124,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 108,
            "node_dst_id": 124,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 111,
            "node_dst_id": 124,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 111,
            "node_dst_id": 124,
            "slot_src": 1,
            "slot_dst": 7
        },
        {
            "node_src_id": 111,
            "node_dst_id": 124,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 111,
            "node_dst_id": 124,
            "slot_src": 3,
            "slot_dst": 9
        },
        {
            "node_src_id": 111,
            "node_dst_id": 124,
            "slot_src": 4,
            "slot_dst": 10
        },
        {
            "node_src_id": 111,
            "node_dst_id": 124,
            "slot_src": 5,
            "slot_dst": 11
        },
        {
            "node_src_id": 117,
            "node_dst_id": 124,
            "slot_src": 0,
            "slot_dst": 12
        },
        {
            "node_src_id": 117,
            "node_dst_id": 124,
            "slot_src": 1,
            "slot_dst": 13
        },
        {
            "node_src_id": 117,
            "node_dst_id": 124,
            "slot_src": 2,
            "slot_dst": 14
        },
        {
            "node_src_id": 117,
            "node_dst_id": 124,
            "slot_src": 3,
            "slot_dst": 15
        },
        {
            "node_src_id": 117,
            "node_dst_id": 124,
            "slot_src": 4,
            "slot_dst": 16
        },
        {
            "node_src_id": 117,
            "node_dst_id": 124,
            "slot_src": 5,
            "slot_dst": 17
        },
        {
            "node_src_id": 118,
            "node_dst_id": 124,
            "slot_src": 0,
            "slot_dst": 18
        },
        {
            "node_src_id": 118,
            "node_dst_id": 124,
            "slot_src": 1,
            "slot_dst": 19
        },
        {
            "node_src_id": 118,
            "node_dst_id": 124,
            "slot_src": 2,
            "slot_dst": 20
        },
        {
            "node_src_id": 118,
            "node_dst_id": 124,
            "slot_src": 3,
            "slot_dst": 21
        },
        {
            "node_src_id": 118,
            "node_dst_id": 124,
            "slot_src": 4,
            "slot_dst": 22
        },
        {
            "node_src_id": 118,
            "node_dst_id": 124,
            "slot_src": 5,
            "slot_dst": 23
        },
        {
            "node_src_id": 14,
            "node_dst_id": 128,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 14,
            "node_dst_id": 128,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 14,
            "node_dst_id": 128,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 14,
            "node_dst_id": 128,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 14,
            "node_dst_id": 128,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 17,
            "node_dst_id": 128,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 17,
            "node_dst_id": 128,
            "slot_src": 1,
            "slot_dst": 7
        },
        {
            "node_src_id": 17,
            "node_dst_id": 128,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 17,
            "node_dst_id": 128,
            "slot_src": 3,
            "slot_dst": 9
        },
        {
            "node_src_id": 17,
            "node_dst_id": 128,
            "slot_src": 4,
            "slot_dst": 10
        },
        {
            "node_src_id": 17,
            "node_dst_id": 128,
            "slot_src": 5,
            "slot_dst": 11
        },
        {
            "node_src_id": 14,
            "node_dst_id": 128,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 8,
            "node_dst_id": 129,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 8,
            "node_dst_id": 129,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 8,
            "node_dst_id": 129,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 8,
            "node_dst_id": 129,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 8,
            "node_dst_id": 129,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 8,
            "node_dst_id": 129,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 11,
            "node_dst_id": 129,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 11,
            "node_dst_id": 129,
            "slot_src": 1,
            "slot_dst": 7
        },
        {
            "node_src_id": 11,
            "node_dst_id": 129,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 11,
            "node_dst_id": 129,
            "slot_src": 3,
            "slot_dst": 9
        },
        {
            "node_src_id": 11,
            "node_dst_id": 129,
            "slot_src": 4,
            "slot_dst": 10
        },
        {
            "node_src_id": 11,
            "node_dst_id": 129,
            "slot_src": 5,
            "slot_dst": 11
        },
        {
            "node_src_id": 4,
            "node_dst_id": 130,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 4,
            "node_dst_id": 130,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 4,
            "node_dst_id": 130,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 4,
            "node_dst_id": 130,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 4,
            "node_dst_id": 130,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 4,
            "node_dst_id": 130,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 5,
            "node_dst_id": 130,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 5,
            "node_dst_id": 130,
            "slot_src": 1,
            "slot_dst": 7
        },
        {
            "node_src_id": 5,
            "node_dst_id": 130,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 5,
            "node_dst_id": 130,
            "slot_src": 3,
            "slot_dst": 9
        },
        {
            "node_src_id": 5,
            "node_dst_id": 130,
            "slot_src": 4,
            "slot_dst": 10
        },
        {
            "node_src_id": 5,
            "node_dst_id": 130,
            "slot_src": 5,
            "slot_dst": 11
        },
        {
            "node_src_id": 130,
            "node_dst_id": 132,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 130,
            "node_dst_id": 132,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 130,
            "node_dst_id": 132,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 130,
            "node_dst_id": 132,
            "slot_src": 3,
            "slot_dst": 3
        },
        {
            "node_src_id": 130,
            "node_dst_id": 132,
            "slot_src": 4,
            "slot_dst": 4
        },
        {
            "node_src_id": 130,
            "node_dst_id": 132,
            "slot_src": 5,
            "slot_dst": 5
        },
        {
            "node_src_id": 129,
            "node_dst_id": 132,
            "slot_src": 0,
            "slot_dst": 9
        },
        {
            "node_src_id": 129,
            "node_dst_id": 132,
            "slot_src": 1,
            "slot_dst": 10
        },
        {
            "node_src_id": 129,
            "node_dst_id": 132,
            "slot_src": 2,
            "slot_dst": 11
        },
        {
            "node_src_id": 129,
            "node_dst_id": 132,
            "slot_src": 3,
            "slot_dst": 12
        },
        {
            "node_src_id": 129,
            "node_dst_id": 132,
            "slot_src": 4,
            "slot_dst": 13
        },
        {
            "node_src_id": 129,
            "node_dst_id": 132,
            "slot_src": 5,
            "slot_dst": 14
        },
        {
            "node_src_id": 128,
            "node_dst_id": 132,
            "slot_src": 4,
            "slot_dst": 22
        },
        {
            "node_src_id": 128,
            "node_dst_id": 132,
            "slot_src": 3,
            "slot_dst": 21
        },
        {
            "node_src_id": 128,
            "node_dst_id": 132,
            "slot_src": 2,
            "slot_dst": 20
        },
        {
            "node_src_id": 128,
            "node_dst_id": 132,
            "slot_src": 1,
            "slot_dst": 19
        },
        {
            "node_src_id": 128,
            "node_dst_id": 132,
            "slot_src": 0,
            "slot_dst": 18
        },
        {
            "node_src_id": 128,
            "node_dst_id": 132,
            "slot_src": 5,
            "slot_dst": 23
        },
        {
            "node_src_id": 132,
            "node_dst_id": 180,
            "slot_src": 18,
            "slot_dst": 0
        },
        {
            "node_src_id": 132,
            "node_dst_id": 180,
            "slot_src": 19,
            "slot_dst": 1
        },
        {
            "node_src_id": 132,
            "node_dst_id": 180,
            "slot_src": 20,
            "slot_dst": 2
        },
        {
            "node_src_id": 132,
            "node_dst_id": 180,
            "slot_src": 21,
            "slot_dst": 3
        },
        {
            "node_src_id": 132,
            "node_dst_id": 180,
            "slot_src": 22,
            "slot_dst": 4
        },
        {
            "node_src_id": 132,
            "node_dst_id": 180,
            "slot_src": 23,
            "slot_dst": 5
        },
        {
            "node_src_id": 124,
            "node_dst_id": 180,
            "slot_src": 0,
            "slot_dst": 6
        },
        {
            "node_src_id": 124,
            "node_dst_id": 180,
            "slot_src": 2,
            "slot_dst": 8
        },
        {
            "node_src_id": 124,
            "node_dst_id": 180,
            "slot_src": 3,
            "slot_dst": 9
        },
        {
            "node_src_id": 124,
            "node_dst_id": 180,
            "slot_src": 4,
            "slot_dst": 10
        },
        {
            "node_src_id": 124,
            "node_dst_id": 180,
            "slot_src": 5,
            "slot_dst": 11
        },
        {
            "node_src_id": 180,
            "node_dst_id": 181,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 180,
            "node_dst_id": 181,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 180,
            "node_dst_id": 181,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 181,
            "node_dst_id": -2147483646,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 181,
            "node_dst_id": -2147483646,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 181,
            "node_dst_id": -2147483646,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 181,
            "node_dst_id": 182,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 181,
            "node_dst_id": 182,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 181,
            "node_dst_id": 182,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 182,
            "node_dst_id": -2147483645,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 182,
            "node_dst_id": -2147483645,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 182,
            "node_dst_id": -2147483645,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 182,
            "node_dst_id": 183,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 182,
            "node_dst_id": 183,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 182,
            "node_dst_id": 183,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 85,
            "node_dst_id": 89,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 183,
            "node_dst_id": -2147483644,
            "slot_src": 0,
            "slot_dst": 0
        },
        {
            "node_src_id": 183,
            "node_dst_id": -2147483644,
            "slot_src": 1,
            "slot_dst": 1
        },
        {
            "node_src_id": 183,
            "node_dst_id": -2147483644,
            "slot_src": 2,
            "slot_dst": 2
        },
        {
            "node_src_id": 180,
            "node_dst_id": 254,
            "slot_src": 11,
            "slot_dst": 0
        },
        {
            "node_src_id": 124,
            "node_dst_id": 180,
            "slot_src": 1,
            "slot_dst": 7
        }
    ],
    "udp_pos_node": {
        "pos_x": 2488.0,
        "pos_y": 1376.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483646,
        "type_id": 7
    },
    "udp_acc_node": {
        "pos_x": 3444.0,
        "pos_y": 1642.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483644,
        "type_id": 7
    },
    "udp_orient_node": {
        "pos_x": 2091.0,
        "pos_y": 1864.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483643,
        "type_id": 7
    },
    "udp_velo_node": {
        "pos_x": 3032.0,
        "pos_y": 1502.0,
        "arranged_pos_x": -2.0,
        "arranged_pos_y": -2.0,
        "user_size_x": 0.0,
        "user_size_y": 0.0,
        "id": -2147483645,
        "type_id": 7
    },
    "shared_script": "// Config\ndouble ReadingSmoothFactor = 0.2; // 0.2 = 100ms\ndouble CenterSmoothFactor = 0.1; // 0.1 = 50ms\ndouble VeloSmoothFactor = 0.1;\nint    VeloIntervalMs = 15;\n\n// --------------------------------------------------\n\nclass Vec3\n{\n    Vec3() {}\n\n    Vec3(double xx, double yy, double zz) { x=xx; y=yy; z=zz; }\n\n    double Len() { return sqrt(x*x + y*y + z*z); }\n\n\tVec3 Normalize()\n    {\n       double len = Len();\n       if (len == 0.0)\n           return Vec3(0,0,0);\n       else\n           return Vec3(x/len, y/len, z/len);\n    }\n\n    Vec3 CrossProduct(Vec3 b)\n    {\n\t\treturn Vec3(y*b.z - z*b.y,\n        \t        z*b.x - x*b.z,\n            \t    x*b.y - y*b.x);\n    }\n\n    // overloaded operators\n    void opAssign(Vec3 rhs) { x=rhs.x; y=rhs.y; z=rhs.z; }\n\n    Vec3 opSub(Vec3 rhs) { return Vec3(x-rhs.x, y-rhs.y, z-rhs.z); }\n\n    Vec3 opAdd(Vec3 rhs) { return Vec3(x+rhs.x, y+rhs.y, z+rhs.z); }\n\n    Vec3 opNeg() { return Vec3(-x, -y, -z); }\n\n    Vec3 opMul(double s) { return Vec3(x*s, y*s, z*s); }\n\n    Vec3 opDiv(double s) { return Vec3(x/s, y/s, z/s); }\n\n    void opAddAssign(Vec3 rhs) { x=x*rhs.x; y=y*rhs.y; z=z*rhs.z; }\n\n    // Var\n    double x, y, z;\n}\n\nVec3 ReadVec3(int slot, int offs)\n{\n\treturn Vec3(Read(slot,  offs),\n                Read(slot+1,offs),\n                Read(slot+2,offs));\n}\n\n// Exponentially Weighted Moving Average (= 1st order IIR)\ndouble SmoothEWMA(double cur, double prev, double factor)\n{\n    return (factor*cur) + ((1.0-factor)*prev);\n}\n\nvoid SmoothVec3(Vec3 cur, Vec3& avg, double factor)\n{\n    avg.x = SmoothEWMA(cur.x, avg.x, factor);\n    avg.y = SmoothEWMA(cur.y, avg.y, factor);\n    avg.z = SmoothEWMA(cur.z, avg.z, factor);\n}\n\nvoid ReadSmoothVec3(int slot, Vec3& avg, double factor)\n{\n    Vec3 cur = ReadVec3(slot, 0);\n    avg.x = SmoothEWMA(cur.x, avg.x, factor);\n    avg.y = SmoothEWMA(cur.y, avg.y, factor);\n    avg.z = SmoothEWMA(cur.z, avg.z, factor);\n}\n\n/// calculates middle XYZ point between src1/src2 and writes it to dstSlot.\nvoid WriteMidXYZ(int dstSlot, int src1, int src2)\n{\n    Write(dstSlot,   (Read(src1,  0) + Read(src2,  0))/2.0); // X\n    Write(dstSlot+1, (Read(src1+1,0) + Read(src2+1,0))/2.0); // Y\n    Write(dstSlot+2, (Read(src1+2,0) + Read(src2+2,0))/2.0); // Z\n}\n\nfloat Pi = 3.1415927;\nfloat HalfPi = Pi/2.f;\n\nclass Matrix3\n{\n    Matrix3() {}\n\n\t// Var\n    Vec3 colX;   // column 1\n    Vec3 colY;   // column 2\n    Vec3 colZ;   // column 3\n\n    // Yaw-pitch-roll, see http://planning.cs.uiuc.edu/node103.html\n    double GetYaw() { return atan2(colX.y, colX.x); }\n\n    double GetPitch()\n    {\n       return atan2(-colX.z, sqrt((colY.z*colY.z)+(colZ.z*colZ.z)));\n    }\n\n    // Special output for RORX\n    double GetYaw90DegClockwise() { return atan2(colX.x, colX.y); }\n}\n\nvoid WriteVec3(int slot, Vec3 v)\n{\n    Write(slot,  v.x);\n    Write(slot+1,v.y);\n    Write(slot+2,v.z);\n}\n\n// --------------------------------------------\n// Helpers\n\nvoid SmoothReadingVec3(int slot, Vec3& avg)\n{\n\tReadSmoothVec3(slot, avg, ReadingSmoothFactor);\n    WriteVec3(slot, avg);\n}\n\nvoid SmoothCenterVec3(int slot, Vec3& avg)\n{\n\tReadSmoothVec3(slot, avg, CenterSmoothFactor);\n    WriteVec3(slot, avg);\n}\n\nvoid SmoothVeloVec3(Vec3 cur, Vec3& avg)\n{\n    SmoothVec3(cur, avg, VeloSmoothFactor);\n}\n\n\n\n"
}